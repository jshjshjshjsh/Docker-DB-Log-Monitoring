version: '3.8'

services:
  oracle:
    image: oracleinanutshell/oracle-xe-11g
    container_name: ksu-db-cms-oracle
    hostname: oracle
    restart: on-failure
    ports:
      - "1522:1522"
      - "8080:8080" # Oracle Enterprise Manager HTTP port
    environment:
      ORACLE_SID: XE
      ORACLE_PWD: oracle
      ORACLE_USERNAME: system
      ORACLE_ALLOW_REMOTE: true
    volumes:
      - oradata:/oradata/orcl
    networks:
      - monitoring-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 120s

  loki:
    image: grafana/loki:2.9.1
    container_name: ksu-db-cms-loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki-config.yml:/etc/loki/local-config.yaml
      - /docker/data/loki/index:/loki/index
      - /docker/data/loki/chunks:/loki/chunks
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring-network
    user: "0"

  prometheus:
    image: prom/prometheus:latest
    container_name: ksu-db-cms-prometheus
    restart: on-failure
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus-config.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 120s

  alertmanager:
    image: prom/alertmanager:latest
    container_name: ksu-db-cms-alertmanager
    networks:
      - monitoring-network
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager-config.yml:/etc/alertmanager/alertmanager.yml

  oracledb_exporter:
    image: iamseth/oracledb_exporter
    container_name: ksu-db-cms-oracledb_exporter
    restart: on-failure
    ports:
      - "9161:9161"
    environment:
      - DATA_SOURCE_NAME=system/oracle@oracle:1522/XE
    networks:
      - monitoring-network
    depends_on:
      - oracle
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 120s

  grafana:
    image: grafana/grafana:10.2.0
    container_name: ksu-db-cms-grafana
    ports:
      - "3000:3000"
    volumes:
      - /docker/data/grafana:/var/lib/grafana
      #- C:/Users/User/AppData/Local/Docker/wsl/data/grafana:/var/lib/grafana
    networks:
      - monitoring-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
      - prometheus
      - alertmanager

volumes:
  oradata:


networks:
  monitoring-network:
    driver: bridge
